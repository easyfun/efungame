<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.efun.wallet.dao.EthRechargeSyncTaskDetailDAO">
  <resultMap id="BaseResultMap" type="com.efun.wallet.entity.EthRechargeSyncTaskDetail">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="coin_market_name" jdbcType="VARCHAR" property="coinMarketName" />
    <result column="coin_name" jdbcType="VARCHAR" property="coinName" />
    <result column="block_number" jdbcType="BIGINT" property="blockNumber" />
    <result column="transaction_index" jdbcType="BIGINT" property="transactionIndex" />
    <result column="STATUS" jdbcType="INTEGER" property="status" />
    <result column="fail_reason" jdbcType="VARCHAR" property="failReason" />
    <result column="transaction_hash" jdbcType="VARCHAR" property="transactionHash" />
    <result column="from_address" jdbcType="VARCHAR" property="fromAddress" />
    <result column="to_address" jdbcType="VARCHAR" property="toAddress" />
    <result column="amount" jdbcType="VARCHAR" property="amount" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, coin_market_name, coin_name, block_number, transaction_index, STATUS, fail_reason, 
    transaction_hash, from_address, to_address, amount, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_mexc_eth_recharge_sync_task_detail
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectByBlockNumberAndTransactionIndex" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from t_mexc_eth_recharge_sync_task_detail
    where block_number = #{blockNumber,jdbcType=BIGINT}
    and transaction_index = #{transactionIndex,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_mexc_eth_recharge_sync_task_detail
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.efun.wallet.entity.EthRechargeSyncTaskDetail">
    insert into t_mexc_eth_recharge_sync_task_detail (id, coin_market_name, coin_name, 
      block_number, transaction_index, STATUS, 
      fail_reason, transaction_hash, from_address, 
      to_address, amount, create_time, 
      update_time)
    values (#{id,jdbcType=BIGINT}, #{coinMarketName,jdbcType=VARCHAR}, #{coinName,jdbcType=VARCHAR}, 
      #{blockNumber,jdbcType=BIGINT}, #{transactionIndex,jdbcType=BIGINT}, #{status,jdbcType=INTEGER}, 
      #{failReason,jdbcType=VARCHAR}, #{transactionHash,jdbcType=VARCHAR}, #{fromAddress,jdbcType=VARCHAR}, 
      #{toAddress,jdbcType=VARCHAR}, #{amount,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertList" parameterType="com.efun.wallet.entity.EthRechargeSyncTaskDetail">
    insert into t_mexc_eth_recharge_sync_task_detail (id, coin_market_name, coin_name,
    block_number, transaction_index, STATUS,
    fail_reason, transaction_hash, from_address,
    to_address, amount, create_time,
    update_time) values
    <foreach collection="list" item="item" index="index" separator=",">
    (#{item.id,jdbcType=BIGINT}, #{item.coinMarketName,jdbcType=VARCHAR}, #{item.coinName,jdbcType=VARCHAR},
    #{item.blockNumber,jdbcType=BIGINT}, #{item.transactionIndex,jdbcType=BIGINT}, #{item.status,jdbcType=INTEGER},
    #{item.failReason,jdbcType=VARCHAR}, #{item.transactionHash,jdbcType=VARCHAR}, #{item.fromAddress,jdbcType=VARCHAR},
    #{item.toAddress,jdbcType=VARCHAR}, #{item.amount,jdbcType=VARCHAR}, #{item.createTime,jdbcType=TIMESTAMP},
    #{item.updateTime,jdbcType=TIMESTAMP})
    </foreach>
  </insert>
  <insert id="insertSelective" parameterType="com.efun.wallet.entity.EthRechargeSyncTaskDetail">
    insert into t_mexc_eth_recharge_sync_task_detail
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="coinMarketName != null">
        coin_market_name,
      </if>
      <if test="coinName != null">
        coin_name,
      </if>
      <if test="blockNumber != null">
        block_number,
      </if>
      <if test="transactionIndex != null">
        transaction_index,
      </if>
      <if test="status != null">
        STATUS,
      </if>
      <if test="failReason != null">
        fail_reason,
      </if>
      <if test="transactionHash != null">
        transaction_hash,
      </if>
      <if test="fromAddress != null">
        from_address,
      </if>
      <if test="toAddress != null">
        to_address,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="coinMarketName != null">
        #{coinMarketName,jdbcType=VARCHAR},
      </if>
      <if test="coinName != null">
        #{coinName,jdbcType=VARCHAR},
      </if>
      <if test="blockNumber != null">
        #{blockNumber,jdbcType=BIGINT},
      </if>
      <if test="transactionIndex != null">
        #{transactionIndex,jdbcType=BIGINT},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="failReason != null">
        #{failReason,jdbcType=VARCHAR},
      </if>
      <if test="transactionHash != null">
        #{transactionHash,jdbcType=VARCHAR},
      </if>
      <if test="fromAddress != null">
        #{fromAddress,jdbcType=VARCHAR},
      </if>
      <if test="toAddress != null">
        #{toAddress,jdbcType=VARCHAR},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.efun.wallet.entity.EthRechargeSyncTaskDetail">
    update t_mexc_eth_recharge_sync_task_detail
    <set>
      <if test="coinMarketName != null">
        coin_market_name = #{coinMarketName,jdbcType=VARCHAR},
      </if>
      <if test="coinName != null">
        coin_name = #{coinName,jdbcType=VARCHAR},
      </if>
      <if test="blockNumber != null">
        block_number = #{blockNumber,jdbcType=BIGINT},
      </if>
      <if test="transactionIndex != null">
        transaction_index = #{transactionIndex,jdbcType=BIGINT},
      </if>
      <if test="status != null">
        STATUS = #{status,jdbcType=INTEGER},
      </if>
      <if test="failReason != null">
        fail_reason = #{failReason,jdbcType=VARCHAR},
      </if>
      <if test="transactionHash != null">
        transaction_hash = #{transactionHash,jdbcType=VARCHAR},
      </if>
      <if test="fromAddress != null">
        from_address = #{fromAddress,jdbcType=VARCHAR},
      </if>
      <if test="toAddress != null">
        to_address = #{toAddress,jdbcType=VARCHAR},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.efun.wallet.entity.EthRechargeSyncTaskDetail">
    update t_mexc_eth_recharge_sync_task_detail
    set coin_market_name = #{coinMarketName,jdbcType=VARCHAR},
      coin_name = #{coinName,jdbcType=VARCHAR},
      block_number = #{blockNumber,jdbcType=BIGINT},
      transaction_index = #{transactionIndex,jdbcType=BIGINT},
      STATUS = #{status,jdbcType=INTEGER},
      fail_reason = #{failReason,jdbcType=VARCHAR},
      transaction_hash = #{transactionHash,jdbcType=VARCHAR},
      from_address = #{fromAddress,jdbcType=VARCHAR},
      to_address = #{toAddress,jdbcType=VARCHAR},
      amount = #{amount,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>